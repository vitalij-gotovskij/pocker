

+ create enum describing card value
+ create enum describing card type (, "♥", , )

- create class Card
   - implement __str__  # Mindaugas Capas
   + implemnt __eq__
   + implement __lt__
   + getValue

###################################################################################
                   iki čia
###################################################################################

- create Deck class, having cards from 2 to axe (at __init__ time). # Andrius
   - __init__   # Andrius
   - popCard()  # Andrius
   - shuffle()  # Andrius

+ create enum describing rank names: ONE, PAIR, TWO_PAIRS, THREE_CARDS....


- create class Player/Hand                        # Dainius
     - stores his seven cards                     # Dainius
     - has name (set at __init__ and is private)  # Dainius
     - getName() returns player's name            # Dainius
     - receiveCard                                # Dainius
     - showHand                                   # Dainius


     - getHighestRank()
        - get_highest_card()
        - get_pair()             # Mindaugas Capas
        - get_two_pairs()        # Mindaugas Puzinauskas
        - get_three()            # Benas Jasikonis
        - get_straight()         # Romuald Čaplinskij
        - get_flush()            # Žydrūnas Puskunigis
        - get_full_house()       # Algimantas Neniškis
        - get_four()             # Rokas Prabušas
        - get_straight_flush()   # Vitalij
        - get_royal_flush()      # Žydrūnas Puskunigis


- create game logic (as Class??)
    - create deck
    - shuffle it
    - accept player
    - deliver cards
    - ask for ranks from player
    - detect winner



